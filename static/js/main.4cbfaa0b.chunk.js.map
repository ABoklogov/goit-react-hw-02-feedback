{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","children","className","FeedbackOptions","options","onLeaveFeedback","map","review","type","name","onClick","Section","title","Notification","message","App","state","addReview","setState","prevReview","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","arrState","Object","keys","this","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAgDeA,EA7CI,SAAC,GAOb,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,SAEA,OACE,gCACE,4CACCL,EAAOC,EAAUC,IAAQ,EACxBG,EAEA,qBAAIC,UAAU,kBAAd,UACE,6BACE,uCAAUN,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAiC,IAAVA,EAAc,EAAIC,EAAzC,gBCJGG,G,MAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIH,UAAU,gBAAd,SACGE,EAAQE,KAAI,SAAAC,GAAM,OACjB,oBAAiBL,UAAU,iBAA3B,SACE,wBACEM,KAAK,SACLC,KAAMF,EACNL,UAAU,eACVQ,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,KAPIA,UCIFI,G,MATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOX,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAU,UAAf,UACE,6BAAKU,IACJX,OCKQY,G,MARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGZ,UAAU,eAAb,SAA6BY,MCwDvBC,E,4MArDbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,UAAY,SAAAV,GACV,EAAKW,UAAS,SAAAC,GAAU,sBACrBZ,EAASY,EAAWZ,GAAU,O,EAInCa,mBAAqB,WACnB,OAAO,EAAKJ,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,K,EAG3DuB,gCAAkC,WAChC,IAAMtB,EAAQ,EAAKqB,qBACbxB,EAAyB,IAAlB,EAAKoB,MAAMpB,KACxB,OAAO0B,KAAKC,MAAM3B,EAAOG,I,4CAG3B,WACE,IAAMyB,EAAWC,OAAOC,KAAKC,KAAKX,OAC1BpB,EAAS+B,KAAKX,MAAdpB,KACAC,EAAY8B,KAAKX,MAAjBnB,QACAC,EAAQ6B,KAAKX,MAAblB,IACF8B,EAAgBD,KAAKP,qBACrBpB,EAAqB2B,KAAKN,kCAEhC,OACE,mCACE,eAAC,EAAD,CAAST,MAAM,wBAAf,UACE,cAAC,EAAD,CACER,QAASoB,EACTnB,gBAAiBsB,KAAKV,YAGxB,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,EACP5B,mBAAoBA,EALtB,SAOE,cAAC,EAAD,CAAcc,QAAQ,iC,GA9ChBe,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4cbfaa0b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport './Statistics.scss';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n  children,\n}) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      {good + neutral + bad === 0 ? (\n        children\n      ) : (\n        <ul className=\"statistics-list\">\n          <li>\n            <p>Good: {good}</p>\n          </li>\n          <li>\n            <p>Neutral: {neutral}</p>\n          </li>\n          <li>\n            <p>Bad: {bad}</p>\n          </li>\n          <li>\n            <p>Total: {total}</p>\n          </li>\n          <li>\n            <p>Positive feedback: {total === 0 ? 0 : positivePercentage}%</p>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className=\"feedback-list\">\n      {options.map(review => (\n        <li key={review} className=\"feedback-items\">\n          <button\n            type=\"button\"\n            name={review}\n            className=\"feedback-btn\"\n            onClick={() => onLeaveFeedback(review)}\n          >\n            {review}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import './Section.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className=\"section\">\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport './Notification.scss';\n\nconst Notification = ({ message }) => {\n  return <p className=\"notification\">{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Notification from '../Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addReview = review => {\n    this.setState(prevReview => ({\n      [review]: prevReview[review] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const good = this.state.good * 100;\n    return Math.round(good / total);\n  };\n\n  render() {\n    const arrState = Object.keys(this.state);\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={arrState}\n            onLeaveFeedback={this.addReview}\n          ></FeedbackOptions>\n\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positivePercentage}\n          >\n            <Notification message=\"No feedback given\"></Notification>\n          </Statistics>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}