{"version":3,"sources":["components/Statistics/StatisticsList/StatisticsList.js","components/Statistics/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App/App.js","index.js"],"names":["StatisticsList","good","neutral","bad","total","positivePercentage","className","Notification","message","Statistics","FeedbackOptions","options","onLeaveFeedback","map","review","type","name","onClick","Section","title","children","App","state","addReview","setState","prevReview","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","arrState","Object","keys","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAgCeA,EA9BQ,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACnD,OACE,qBAAIC,UAAU,kBAAd,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAiC,IAAVA,EAAc,EAAIC,EAAzC,aCPOE,G,MARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGF,UAAU,eAAb,SAA6BE,MCyBvBC,EAxBI,SAAC,GAAuD,IAArDR,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,4CACW,IAAVD,EACC,cAAC,EAAD,CAAcI,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,QCUfK,G,MAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIN,UAAU,gBAAd,SACGK,EAAQE,KAAI,SAAAC,GAAM,OACjB,oBAAiBR,UAAU,iBAA3B,SACE,wBACES,KAAK,SACLC,KAAMF,EACNR,UAAU,eACVW,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,KAPIA,UCIFI,G,MATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKd,UAAU,UAAf,UACE,6BAAKa,IACJC,OCiDQC,E,4MAjDbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,UAAY,SAAAT,GACV,EAAKU,UAAS,SAAAC,GAAU,sBACrBX,EAASW,EAAWX,GAAU,O,EAInCY,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQrB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBwB,gCAAkC,WAChC,IAAMvB,EAAQ,EAAKsB,qBACbzB,EAAyB,IAAlB,EAAKqB,MAAMrB,KACxB,OAAO2B,KAAKC,MAAM5B,EAAOG,I,4CAG3B,WACE,MAA+B0B,KAAKR,MAA5BrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB4B,EAAWC,OAAOC,KAAKH,KAAKR,OAC5BY,EAAgBJ,KAAKJ,qBACrBrB,EAAqByB,KAAKH,kCAEhC,OACE,mCACE,eAAC,EAAD,CAASR,MAAM,wBAAf,UACE,cAAC,EAAD,CACER,QAASoB,EACTnB,gBAAiBkB,KAAKP,YAExB,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,EACP7B,mBAAoBA,a,GA1Cd8B,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d8a3b96.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst StatisticsList = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className=\"statistics-list\">\n      <li>\n        <p>Good: {good}</p>\n      </li>\n      <li>\n        <p>Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p>Bad: {bad}</p>\n      </li>\n      <li>\n        <p>Total: {total}</p>\n      </li>\n      <li>\n        <p>Positive feedback: {total === 0 ? 0 : positivePercentage}%</p>\n      </li>\n    </ul>\n  );\n};\n\nStatisticsList.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default StatisticsList;\n","import PropTypes from 'prop-types';\nimport './Notification.scss';\n\nconst Notification = ({ message }) => {\n  return <p className=\"notification\">{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport './Statistics.scss';\nimport StatisticsList from './StatisticsList';\nimport Notification from './Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <StatisticsList\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className=\"feedback-list\">\n      {options.map(review => (\n        <li key={review} className=\"feedback-items\">\n          <button\n            type=\"button\"\n            name={review}\n            className=\"feedback-btn\"\n            onClick={() => onLeaveFeedback(review)}\n          >\n            {review}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import './Section.scss';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className=\"section\">\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addReview = review => {\n    this.setState(prevReview => ({\n      [review]: prevReview[review] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const good = this.state.good * 100;\n    return Math.round(good / total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const arrState = Object.keys(this.state);\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={arrState}\n            onLeaveFeedback={this.addReview}\n          />\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}